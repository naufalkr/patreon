{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\babel-loader\\lib\\index.js!D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\src\\store\\modules\\comment.js","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\src\\store\\modules\\comment.js","mtime":1730447401967},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\babel-loader\\lib\\index.js","mtime":1730447645019},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\eslint-loader\\index.js","mtime":1730447644407}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCBDb21tZW50U2VydmljZSBmcm9tICdAL3NlcnZpY2VzL0NvbW1lbnRTZXJ2aWNlJzsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiB7CiAgICBjb21tZW50czogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGdldENvbW1lbnRzOiBmdW5jdGlvbiBnZXRDb21tZW50cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY29tbWVudHM7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldENvbW1lbnRzOiBmdW5jdGlvbiBzZXRDb21tZW50cyhzdGF0ZSwgY29tbWVudHMpIHsKICAgICAgc3RhdGUuY29tbWVudHMgPSBjb21tZW50czsKICAgIH0sCiAgICBhZGRDb21tZW50OiBmdW5jdGlvbiBhZGRDb21tZW50KHN0YXRlLCBjb21tZW50KSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCdoZWxsbycsIGNvbW1lbnQpCiAgICAgIHN0YXRlLmNvbW1lbnRzLmRhdGEudW5zaGlmdChjb21tZW50KTsgLy8gY29uc29sZS5sb2coc3RhdGUuY29tbWVudHMuZGF0YSkKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHNldENvbW1lbnRzOiBmdW5jdGlvbiBzZXRDb21tZW50cyhfcmVmLCB2aWRlb0lkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBDb21tZW50U2VydmljZS5nZXRDb21tZW50QnlWaWRlb0lkKHZpZGVvSWQpLnRoZW4oZnVuY3Rpb24gKGNvbW1lbnRzKSB7CiAgICAgICAgICBjb21taXQoJ3NldENvbW1lbnRzJywgY29tbWVudHMuZGF0YSk7CiAgICAgICAgICByZXNvbHZlKGNvbW1lbnRzKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGFkZENvbW1lbnQ6IGZ1bmN0aW9uIGFkZENvbW1lbnQoX3JlZjIsIGNvbW1lbnQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdhZGRDb21tZW50JywgY29tbWVudCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["D:/Kampus/SEMESTER 5/PBKK/vue-nodejs-youtube-clone/src/store/modules/comment.js"],"names":["Vue","Vuex","CommentService","use","state","comments","getters","getComments","mutations","setComments","addComment","comment","data","unshift","actions","videoId","commit","Promise","resolve","reject","getCommentByVideoId","then","catch","err"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe;AACbG,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADM;AAIbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE,qBAACH,KAAD,EAAW;AACtB,aAAOA,KAAK,CAACC,QAAb;AACD;AAHM,GAJI;AASbG,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGL,KADH,EACUC,QADV,EACoB;AAC3BD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD,KAHQ;AAITK,IAAAA,UAJS,sBAIEN,KAJF,EAISO,OAJT,EAIkB;AACzB;AACAP,MAAAA,KAAK,CAACC,QAAN,CAAeO,IAAf,CAAoBC,OAApB,CAA4BF,OAA5B,EAFyB,CAGzB;AACD;AARQ,GATE;AAmBbG,EAAAA,OAAO,EAAE;AACPL,IAAAA,WADO,6BACiBM,OADjB,EAC0B;AAAA,UAAnBC,MAAmB,QAAnBA,MAAmB;AAC/B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,QAAAA,cAAc,CAACkB,mBAAf,CAAmCL,OAAnC,EACGM,IADH,CACQ,UAAChB,QAAD,EAAc;AAClBW,UAAAA,MAAM,CAAC,aAAD,EAAgBX,QAAQ,CAACO,IAAzB,CAAN;AACAM,UAAAA,OAAO,CAACb,QAAD,CAAP;AACD,SAJH,EAKGiB,KALH,CAKS,UAACC,GAAD;AAAA,iBAASJ,MAAM,CAACI,GAAD,CAAf;AAAA,SALT;AAMD,OAPM,CAAP;AAQD,KAVM;AAWPb,IAAAA,UAXO,6BAWgBC,OAXhB,EAWyB;AAAA,UAAnBK,MAAmB,SAAnBA,MAAmB;AAC9BA,MAAAA,MAAM,CAAC,YAAD,EAAeL,OAAf,CAAN;AACD;AAbM;AAnBI,CAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport CommentService from '@/services/CommentService'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default {\r\n  state: {\r\n    comments: []\r\n  },\r\n  getters: {\r\n    getComments: (state) => {\r\n      return state.comments\r\n    }\r\n  },\r\n  mutations: {\r\n    setComments(state, comments) {\r\n      state.comments = comments\r\n    },\r\n    addComment(state, comment) {\r\n      // console.log('hello', comment)\r\n      state.comments.data.unshift(comment)\r\n      // console.log(state.comments.data)\r\n    }\r\n  },\r\n  actions: {\r\n    setComments({ commit }, videoId) {\r\n      return new Promise((resolve, reject) => {\r\n        CommentService.getCommentByVideoId(videoId)\r\n          .then((comments) => {\r\n            commit('setComments', comments.data)\r\n            resolve(comments)\r\n          })\r\n          .catch((err) => reject(err))\r\n      })\r\n    },\r\n    addComment({ commit }, comment) {\r\n      commit('addComment', comment)\r\n    }\r\n  }\r\n}\r\n"]}]}