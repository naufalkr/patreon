{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\components\\comments\\CommentList.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\components\\comments\\CommentList.vue","mtime":1730447401963},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1730447646010},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1730447648140},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1730447646049},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1730447644413},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1730447647589},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1730447647010}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudi1hcHBsaWNhdGlvbi0taXMtbHRyIC52LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXJfX2ljb24gew0KICBtYXJnaW4tbGVmdDogaW5pdGlhbDsNCn0NCg0KLnYtZXhwYW5zaW9uLXBhbmVsOjpiZWZvcmUgew0KICBib3gtc2hhZG93OiBpbml0aWFsOw0KfQ0K"},{"version":3,"sources":["CommentList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6VA;AACA;AACA;;AAEA;AACA;AACA","file":"CommentList.vue","sourceRoot":"src/components/comments","sourcesContent":["<template>\r\n  <div>\r\n    <!-- <div v-if=\"!comments.length\">\r\n      <p>No comment yet, leave a comment</p>\r\n    </div> -->\r\n    <div v-for=\"(comment, i) in loading ? 4 : comments\" :key=\"comment._id\">\r\n      <v-skeleton-loader type=\"list-item-avatar-two-line\" :loading=\"loading\">\r\n        <v-card class=\"transparent\" flat>\r\n          <v-list-item three-line class=\"pl-0 mt-2\">\r\n            <v-list-item-avatar\r\n              v-if=\"typeof comment.userId !== 'undefined'\"\r\n              size=\"50\"\r\n            >\r\n              <v-img\r\n                v-if=\"comment.userId.photoUrl !== 'no-photo.jpg'\"\r\n                class=\"elevation-6\"\r\n                :src=\"`${url}/uploads/avatars/${comment.userId.photoUrl}`\"\r\n              ></v-img>\r\n              <v-avatar v-else color=\"red\">\r\n                <span class=\"white--text headline \">\r\n                  {{\r\n                    comment.userId.channelName.split('')[0].toUpperCase()\r\n                  }}</span\r\n                >\r\n              </v-avatar>\r\n            </v-list-item-avatar>\r\n            <v-list-item-content>\r\n              <div class=\"d-flex mb-0\">\r\n                <v-list-item-title\r\n                  v-if=\"comment.userId\"\r\n                  class=\"font-weight-medium caption mb-0 d-flex\"\r\n                  >{{ comment.userId.channelName }}\r\n                  <span class=\"pl-2 font-weight-light grey--text\">\r\n                    {{ dateFormatter(comment.createdAt) }}</span\r\n                  >\r\n                </v-list-item-title>\r\n                <v-menu bottom left>\r\n                  <template v-slot:activator=\"{ on }\">\r\n                    <v-btn icon v-on=\"on\">\r\n                      <v-icon>mdi-dots-vertical</v-icon>\r\n                    </v-btn>\r\n                  </template>\r\n\r\n                  <v-list v-if=\"isAuthenticated\">\r\n                    <v-list-item @click=\"deleteComment(comment._id)\">\r\n                      <v-list-item-title\r\n                        ><v-icon>mdi-trash</v-icon>Delete</v-list-item-title\r\n                      >\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-menu>\r\n              </div>\r\n              <v-list-item-subtitle\r\n                class=\"mt-n2 black--text text--darken-4 caption\"\r\n                >{{ comment.text }}</v-list-item-subtitle\r\n              >\r\n\r\n              <div>\r\n                <v-btn\r\n                  text\r\n                  small\r\n                  :ripple=\"false\"\r\n                  @click.stop=\"showReply(`${'reply' + comment._id}`)\"\r\n                  >Reply</v-btn\r\n                >\r\n              </div>\r\n              <div class=\"d-none\" :ref=\"`${'reply' + comment._id}`\">\r\n                <v-list-item three-line class=\"pl-0\">\r\n                  <v-list-item-avatar\r\n                    v-if=\"typeof comment.userId !== 'undefined'\"\r\n                    class=\"mt-2\"\r\n                    size=\"40\"\r\n                  >\r\n                    <v-avatar v-if=\"!isAuthenticated\" color=\"primary\">\r\n                      <v-icon class=\"white--text\">mdi-account</v-icon>\r\n                    </v-avatar>\r\n                    <template v-else>\r\n                      <v-img\r\n                        v-if=\"currentUser.photoUrl !== 'no-photo.jpg'\"\r\n                        class=\"elevation-6\"\r\n                        :src=\"`${url}/uploads/avatars/${currentUser.photoUrl}`\"\r\n                      ></v-img>\r\n                      <v-avatar v-else color=\"red\">\r\n                        <span class=\"white--text headline \">\r\n                          {{\r\n                            currentUser.channelName.split('')[0].toUpperCase()\r\n                          }}</span\r\n                        >\r\n                      </v-avatar>\r\n                    </template>\r\n                  </v-list-item-avatar>\r\n                  <v-list-item-content class=\"align-self-auto mt-0 pt-0\">\r\n                    <v-form :ref=\"`form${comment._id}`\">\r\n                      <v-text-field\r\n                        :ref=\"`${'input' + comment._id}`\"\r\n                        class=\"pt-0 mt-0 body-2\"\r\n                        placeholder=\"Add a public comment...\"\r\n                        @click=\"clickTextField\"\r\n                        :value=\"repliesInput[`input${comment._id}`]\"\r\n                      >\r\n                      </v-text-field>\r\n                    </v-form>\r\n                    <div\r\n                      :ref=\"comment._id + 'btns'\"\r\n                      class=\"d-inline-block text-right\"\r\n                      v-if=\"isAuthenticated\"\r\n                    >\r\n                      <v-btn text @click=\"hideReply(comment._id)\" small\r\n                        >Cancel</v-btn\r\n                      >\r\n                      <v-btn\r\n                        class=\"blue darken-3 white--text\"\r\n                        depressed\r\n                        tile\r\n                        small\r\n                        :loading=\"btnLoading && i == index\"\r\n                        @click=\"\r\n                          index = i\r\n                          addReply($event, comment._id)\r\n                        \"\r\n                        >Reply</v-btn\r\n                      >\r\n                    </div>\r\n                  </v-list-item-content>\r\n                </v-list-item>\r\n                <!-- </v-list-item-action> -->\r\n              </div>\r\n              <v-expansion-panels>\r\n                <v-expansion-panel class=\"transparent elevation-0\">\r\n                  <v-expansion-panel-header\r\n                    v-if=\"comment.replies && comment.replies.length > 0\"\r\n                    class=\"blue--text text--darken-4 py-0\"\r\n                    >{{\r\n                      comment.replies.length\r\n                    }}\r\n                    replies</v-expansion-panel-header\r\n                  >\r\n                  <v-expansion-panel-content>\r\n                    <v-list-item\r\n                      three-line\r\n                      class=\"pl-0 mt-2\"\r\n                      v-for=\"reply in comment.replies\"\r\n                      :key=\"reply._id\"\r\n                    >\r\n                      <v-list-item-avatar\r\n                        v-if=\"typeof reply !== 'undefined'\"\r\n                        size=\"50\"\r\n                      >\r\n                        <v-img\r\n                          v-if=\"reply.userId.photoUrl !== 'no-photo.jpg'\"\r\n                          class=\"elevation-6\"\r\n                          :src=\"\r\n                            `${url}/uploads/avatars/${reply.userId.photoUrl}`\r\n                          \"\r\n                        ></v-img>\r\n                        <v-avatar v-else color=\"red\">\r\n                          <span class=\"white--text headline \">\r\n                            {{\r\n                              reply.userId.channelName\r\n                                .split('')[0]\r\n                                .toUpperCase()\r\n                            }}</span\r\n                          >\r\n                        </v-avatar>\r\n                      </v-list-item-avatar>\r\n                      <v-list-item-content>\r\n                        <div class=\"d-flex mb-0\">\r\n                          <v-list-item-title\r\n                            v-if=\"reply.userId\"\r\n                            class=\"font-weight-medium caption mb-0 d-flex\"\r\n                            >{{ reply.userId.channelName }}\r\n                            <span class=\"pl-2 font-weight-light grey--text\">\r\n                              {{ dateFormatter(reply.createdAt) }}</span\r\n                            >\r\n                          </v-list-item-title>\r\n                          <v-menu bottom left v-if=\"isAuthenticated\">\r\n                            <template v-slot:activator=\"{ on }\">\r\n                              <v-btn icon v-on=\"on\">\r\n                                <v-icon>mdi-dots-vertical</v-icon>\r\n                              </v-btn>\r\n                            </template>\r\n\r\n                            <v-list>\r\n                              <v-list-item\r\n                                @click=\"deleteReply(comment._id, reply._id)\"\r\n                              >\r\n                                <v-list-item-title\r\n                                  ><v-icon>mdi-trash</v-icon\r\n                                  >Delete</v-list-item-title\r\n                                >\r\n                              </v-list-item>\r\n                            </v-list>\r\n                          </v-menu>\r\n                        </div>\r\n                        <v-list-item-subtitle\r\n                          class=\"mt-n2 black--text text--darken-4 caption\"\r\n                          >{{ reply.text }}</v-list-item-subtitle\r\n                        >\r\n                      </v-list-item-content>\r\n                    </v-list-item>\r\n                  </v-expansion-panel-content>\r\n                </v-expansion-panel>\r\n              </v-expansion-panels>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </v-card>\r\n      </v-skeleton-loader>\r\n    </div>\r\n    <v-snackbar v-model=\"snackbar\">\r\n      Comment deleted successfully\r\n      <v-btn color=\"white\" text @click=\"snackbar = false\" icon>\r\n        <v-icon>mdi-close-circle</v-icon>\r\n      </v-btn>\r\n    </v-snackbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment'\r\nimport { mapGetters } from 'vuex'\r\n\r\nimport CommentService from '@/services/CommentService'\r\nimport ReplyService from '@/services/ReplyService'\r\nexport default {\r\n  props: {\r\n    videoId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      repliesInput: {},\r\n      comments: this.$store.getters.getComments.data,\r\n      commentsLength: false,\r\n      index: -1,\r\n      btnLoading: false,\r\n      url: process.env.VUE_APP_URL,\r\n      snackbar: false,\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated', 'currentUser'])\r\n  },\r\n  methods: {\r\n    async getComments() {\r\n      this.loading = true\r\n      const comments = await this.$store\r\n        .dispatch('setComments', this.videoId)\r\n        .catch((err) => console.log(err))\r\n        .finally(() => (this.loading = false))\r\n      // console.log(this.loading)\r\n      if (!comments) return\r\n\r\n      this.comments = this.$store.getters.getComments.data\r\n      // console.log(this.comments.length)\r\n      // this.loading = false\r\n      // console.log(this.$store.getters.getComments.data)\r\n    },\r\n    async deleteComment(id) {\r\n      if (!this.isAuthenticated) return\r\n      // this.$store.dispatch('deleteComment', id)\r\n      this.comments = this.comments.filter(\r\n        (comment) => comment._id.toString() !== id.toString()\r\n      )\r\n\r\n      this.snackbar = true\r\n      await CommentService.deleteById(id).catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n      await this.$store\r\n        .dispatch('setComments', this.videoId)\r\n        .catch((err) => console.log(err))\r\n      this.comments = this.$store.getters.getComments.data\r\n      this.$emit('videoCommentLength')\r\n    },\r\n    async addReply(event, id) {\r\n      if (!this.isAuthenticated) return\r\n      if (this.$refs[`input${id}`][0].$refs.input.value == '') return\r\n\r\n      this.btnLoading = true\r\n      // console.log((event.target.loading = true))\r\n      this.$refs[`form${id}`][0].reset()\r\n      // console.log(this.$refs[`input${id}`][0].$refs.input.value)\r\n\r\n      const reply = await ReplyService.createReply({\r\n        commentId: id,\r\n        text: this.$refs[`input${id}`][0].$refs.input.value\r\n      })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n        .finally(() => {\r\n          this.btnLoading = false\r\n          // this.$store.dispatch('setComments', this.videoId)\r\n        })\r\n      reply.data.data.userId = this.$store.getters.currentUser\r\n      // this.$store.dispatch('addComment', reply.data.data)\r\n      // console.log(this.$store.getters.getComments.data)\r\n      let comment = this.comments.find(\r\n        (comment) => comment._id.toString() === id.toString()\r\n      )\r\n      // console.log(comment)\r\n      if (!comment.replies) {\r\n        // console.log('1')\r\n        // comment.replies = []\r\n        comment.replies.push(reply.data.data)\r\n      } else {\r\n        // console.log('2')\r\n        comment.replies.unshift(reply.data.data)\r\n        // this.comments\r\n        //   .find((comment) => comment._id === id)\r\n        //   .replies.unshift(reply.data.data)\r\n      }\r\n\r\n      // console.log(\r\n      //   this.$store.getters.getComments.data.find(\r\n      //     (comment) => comment._id === id\r\n      //   )\r\n      // )\r\n      // this.comments\r\n      //   .find((comment) => comment._id === id)\r\n      //   .replies.unshift(reply.data.data)\r\n    },\r\n    clickTextField() {\r\n      if (!this.isAuthenticated) return this.$router.push('/signin')\r\n    },\r\n    showReply(id) {\r\n      this.$refs[id][0].classList.toggle('d-none')\r\n    },\r\n    hideReply(id) {\r\n      this.$refs[`form${id}`][0].reset()\r\n      this.$refs['reply' + id][0].classList.toggle('d-none')\r\n    },\r\n    dateFormatter(date) {\r\n      return moment(date).fromNow()\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.getComments()\r\n    // console.log(this.comments)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.v-application--is-ltr .v-expansion-panel-header__icon {\r\n  margin-left: initial;\r\n}\r\n\r\n.v-expansion-panel::before {\r\n  box-shadow: initial;\r\n}\r\n</style>\r\n"]}]}