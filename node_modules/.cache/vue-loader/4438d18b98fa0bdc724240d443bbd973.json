{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\views\\Welcome.vue?vue&type=template&id=e4731dd0&scoped=true&","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\views\\Welcome.vue","mtime":1730636441340},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1730447648287},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1730447647589},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1730447647010}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}