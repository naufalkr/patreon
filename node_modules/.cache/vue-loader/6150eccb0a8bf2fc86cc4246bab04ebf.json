{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\components\\UploadVideoModal.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\components\\UploadVideoModal.vue","mtime":1730687947763},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1730447646010},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1730447648140},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1730447646049},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1730447644413},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1730447647589},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1730447647010}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNtb2RhbC1oZWFkZXIgew0KICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDIzOCwgMjMyLCAyMzIpOw0KfQ0KDQojaW1hZ2UtcGxhY2Vob2xkZXIgew0KICBwYWRkaW5nLXRvcDogOGVtOw0KICBwYWRkaW5nLWJvdHRvbTogOGVtOw0KICBib3JkZXI6IDJweCBkYXNoZWQgcmdiKDIwOSwgMjA5LCAyMDkpOw0KfQ0K"},{"version":3,"sources":["UploadVideoModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoXA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"UploadVideoModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-dialog\r\n    v-model=\"dialog\"\r\n    persistent\r\n    transition=\"fab-transition\"\r\n    max-width=\"1000\"\r\n  >\r\n    <v-card>\r\n      <div class=\"d-flex justify-space-between mb-5\" id=\"modal-header\">\r\n        <v-card-title class=\"py-3\">Upload Video</v-card-title>\r\n        <div class=\"mt-3 mr-2\">\r\n          <v-btn text>\r\n            Upload With Classic\r\n          </v-btn>\r\n          <v-btn icon text @click=\"closeModal\">\r\n            <v-icon>mdi-close</v-icon>\r\n          </v-btn>\r\n        </div>\r\n      </div>\r\n\r\n      <v-card-text\r\n        v-if=\"!uploaded\"\r\n        class=\"d-flex flex-column align-center my-md-12 py-md-12 my-sm-8 py-sm-8 my-xs-0 py-xs-0 my-12 py-12\"\r\n      >\r\n        <div v-if=\"!uploading\" class=\"text-center\">\r\n          <div>\r\n            <v-btn\r\n              icon\r\n              class=\"grey lighten-2 mb-4\"\r\n              style=\"height: 104px;width: 104px;\"\r\n              @click=\"selectFile\"\r\n              ><v-icon x-large class=\"grey--text text--darken-1\"\r\n                >mdi-upload</v-icon\r\n              ></v-btn\r\n            >\r\n          </div>\r\n\r\n          <ValidationProvider\r\n            rules=\"required|size:5000\"\r\n            v-slot=\"{ errors }\"\r\n            name=\"file\"\r\n            ref=\"provider\"\r\n          >\r\n            <v-file-input\r\n              @change=\"uploadVideo\"\r\n              v-model=\"selectedFile\"\r\n              accept=\"video/mp4\"\r\n              placeholder=\"Pick an video\"\r\n              prepend-icon=\"mdi-video\"\r\n              :error-messages=\"errors\"\r\n              ref=\"fileInput\"\r\n            ></v-file-input>\r\n          </ValidationProvider>\r\n          <v-btn\r\n            type=\"submit\"\r\n            depressed\r\n            @click=\"$refs.fileInput.$refs.input.click()\"\r\n            class=\"blue darken-3 flat white--text mt-4\"\r\n            >Select File</v-btn\r\n          >\r\n        </div>\r\n\r\n        <v-progress-circular\r\n          v-else\r\n          :rotate=\"360\"\r\n          :size=\"100\"\r\n          :width=\"15\"\r\n          :value=\"value\"\r\n          color=\"teal\"\r\n        >\r\n          {{ value }}\r\n        </v-progress-circular>\r\n      </v-card-text>\r\n      <v-card-text v-else>\r\n        <h2 class=\"mb-6\">Details</h2>\r\n        <v-row>\r\n          <v-col\r\n            order=\"last\"\r\n            order-sm=\"last\"\r\n            order-md=\"first\"\r\n            order-lg=\"first\"\r\n            order-xl=\"first\"\r\n            cols=\"12\"\r\n            sm=\"12\"\r\n            md=\"8\"\r\n            lg=\"8\"\r\n          >\r\n            <ValidationObserver ref=\"form\">\r\n              <form @submit.prevent=\"submit\">\r\n                <ValidationProvider\r\n                  v-slot=\"{ errors }\"\r\n                  name=\"Title\"\r\n                  rules=\"required|min:3\"\r\n                >\r\n                  <v-text-field\r\n                    v-model=\"formData.title\"\r\n                    :error-messages=\"errors\"\r\n                    label=\"Title (required)\"\r\n                    class=\"mb-3\"\r\n                    filled\r\n                    dense\r\n                    counter=\"100\"\r\n                    max-length=\"100\"\r\n                  ></v-text-field>\r\n                </ValidationProvider>\r\n                <ValidationProvider\r\n                  v-slot=\"{ errors }\"\r\n                  name=\"Description\"\r\n                  rules=\"required|min:3\"\r\n                >\r\n                  <v-textarea\r\n                    filled\r\n                    auto-grow\r\n                    :error-messages=\"errors\"\r\n                    label=\"Description\"\r\n                    placeholder=\"Tell viewers about your video\"\r\n                    rows=\"5\"\r\n                    counter=\"5000\"\r\n                    max-length=\"5000\"\r\n                    v-model=\"formData.description\"\r\n                    row-height=\"20\"\r\n                  ></v-textarea>\r\n                </ValidationProvider>\r\n                <ValidationProvider\r\n                  v-slot=\"{ errors }\"\r\n                  name=\"Visibilty\"\r\n                  rules=\"required|min:3\"\r\n                >\r\n                  <v-select\r\n                    :items=\"visibilty\"\r\n                    :error-messages=\"errors\"\r\n                    filled\r\n                    label=\"Visibilty\"\r\n                    v-model=\"formData.visibilty\"\r\n                  ></v-select>\r\n                </ValidationProvider>\r\n                <ValidationProvider\r\n                  v-slot=\"{ errors }\"\r\n                  name=\"Cateogry\"\r\n                  rules=\"required|min:3\"\r\n                >\r\n                  <v-select\r\n                    :items=\"categoriesTitles\"\r\n                    :error-messages=\"errors\"\r\n                    filled\r\n                    label=\"Categories\"\r\n                    v-model=\"formData.category\"\r\n                    :loading=\"categoryLoading\"\r\n                  ></v-select>\r\n                </ValidationProvider>\r\n\r\n                <div class=\"mt-6 d-flex justify-space-between\">\r\n                  <v-btn\r\n                    :loading=\"submitLoading\"\r\n                    type=\"submit\"\r\n                    class=\"primary\"\r\n                    depressed\r\n                    >Submit</v-btn\r\n                  >\r\n                </div>\r\n              </form>\r\n            </ValidationObserver>\r\n          </v-col>\r\n          <v-col\r\n            order-sm=\"1\"\r\n            cols=\"12\"\r\n            sm=\"12\"\r\n            md=\"4\"\r\n            lg=\"4\"\r\n            class=\"text-center\"\r\n          >\r\n            <v-btn text @click=\"toggleShow\">Upload Thumbnails</v-btn>\r\n            <my-upload\r\n              field=\"thumbnail\"\r\n              @crop-success=\"cropSuccess\"\r\n              method=\"PUT\"\r\n              v-model=\"show\"\r\n              :width=\"1280\"\r\n              :height=\"720\"\r\n              :url=\"url\"\r\n              :headers=\"headers\"\r\n              img-format=\"jpg\"\r\n              langType=\"en\"\r\n            ></my-upload>\r\n            <v-responsive width=\"330\" class=\"mx-auto\">\r\n              <div v-if=\"!imgDataUrl\" class=\"px-12\" id=\"image-placeholder\">\r\n                <v-icon>mdi-image-plus</v-icon>\r\n              </div>\r\n              <v-img\r\n                v-else\r\n                max-width=\"330\"\r\n                height=\"350\"\r\n                :src=\"imgDataUrl\"\r\n              ></v-img>\r\n            </v-responsive>\r\n            <p v-if=\"imgDataUrl == ''\" class=\"red--text\">\r\n              Please upload thumbnail\r\n            </p>\r\n          </v-col>\r\n        </v-row>\r\n      </v-card-text>\r\n      <v-card-actions v-if=\"!uploaded\">\r\n        <p class=\"text-center grey--text caption px-12 px-xs-0\">\r\n          By submitting your videos to YouTube, you acknowledge that you agree\r\n          to YouTube's Terms of Service and Community Guidelines. Please be sure\r\n          not to violate others' copyright or privacy rights. Learn more\r\n        </p>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport myUpload from \"vue-image-crop-upload\";\r\nimport VideoService from \"@/services/VideoService\";\r\nimport CategoryService from \"@/services/CategoryService\";\r\nexport default {\r\n  name: \"UploadModal\",\r\n  props: [\"openDialog\"],\r\n  data: function () {\r\n    return {\r\n      // dialog: this.openDialog ? this.openDialog : false,\r\n      valid: false,\r\n      uploaded: false,\r\n      uploading: false,\r\n      submitLoading: false,\r\n      categoryLoading: false,\r\n      interval: {},\r\n      value: 0,\r\n      show: false,\r\n      rules: [\r\n        (value) =>\r\n          !value ||\r\n          value.size > 5000000 ||\r\n          `Video size should be less than 5 MB!, ${value.size}`,\r\n      ],\r\n      categoriesTitles: [],\r\n      categories: [],\r\n      visibilty: [\"Public\", \"Private\"],\r\n      selectedFile: [],\r\n      formData: {\r\n        id: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        visibilty: \"\",\r\n      },\r\n      imgDataUrl: \"\",\r\n      url: \"\",\r\n      headers: { Authorization: `Bearer ${this.$store.getters.getToken}` },\r\n    };\r\n  },\r\n  computed: {\r\n    dialog() {\r\n      return this.openDialog;\r\n    },\r\n  },\r\n  methods: {\r\n    async uploadVideo(e) {\r\n      const { valid } = await this.$refs.provider.validate(e);\r\n\r\n      if (!valid) return;\r\n      // console.log(this.selectedFile)\r\n\r\n      this.uploading = true;\r\n      const fd = new FormData();\r\n      fd.append(\"video\", this.selectedFile, this.selectedFile.name);\r\n\r\n      let video = await VideoService.uploadVideo(fd, {\r\n        onUploadProgress: (uploadEvent) => {\r\n          this.value = Math.round(\r\n            (uploadEvent.loaded / uploadEvent.total) * 100\r\n          );\r\n        },\r\n      })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          this.uploaded = true;\r\n          this.uploading = false;\r\n        });\r\n\r\n      if (!video) return;\r\n      video = video.data.data;\r\n\r\n      this.formData.id = video._id;\r\n      this.formData.title = video.title;\r\n      this.formData.description = video.description;\r\n      this.formData.cateogry = video.cateogry;\r\n      this.url = `${process.env.VUE_APP_URL}/api/v1/videos/${video._id}/thumbnails`;\r\n      // this.interval = setInterval(() => {\r\n      //   if (this.value === 100) {\r\n      //     this.uploaded = true\r\n      //     clearInterval(this.inte-rval)\r\n      //   }\r\n      //   this.value += 10\r\n      // }, 1000)\r\n      // }\r\n      // }\r\n    },\r\n    async submit() {\r\n      if (this.imgDataUrl == \"\") return;\r\n      this.submitLoading = true;\r\n      this.formData.category = this.categories.find(\r\n        (category) => category.title === this.formData.category\r\n      )._id;\r\n\r\n      const video = await VideoService.updateVideo(this.formData.id, {\r\n        title: this.formData.title,\r\n        description: this.formData.description,\r\n        categoryId: this.formData.category,\r\n        status: this.formData.visibilty.toLowerCase(),\r\n      })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          this.submitLoading = false;\r\n          this.uploaded = false;\r\n        });\r\n\r\n      if (!video) return;\r\n      // this.$nextTick(() => {\r\n      //   this.$refs.form.reset()\r\n      // })\r\n      this.formData.visibilty = \"\";\r\n      this.imgDataUrl = \"\";\r\n      this.selectedFile = [];\r\n      this.closeModal();\r\n\r\n      this.$router.push(`/studio/videos?${new Date()}`);\r\n      // console.log('submittied')\r\n    },\r\n    async getCategories() {\r\n      this.categoryLoading = true;\r\n      const categories = await CategoryService.getAll()\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => (this.categoryLoading = false));\r\n\r\n      this.categoriesTitles = categories.data.data.map((category) => {\r\n        return category.title;\r\n      });\r\n      this.categories = categories.data.data;\r\n    },\r\n    closeModal() {\r\n      this.$emit(\"closeDialog\");\r\n    },\r\n    selectFile() {\r\n      this.$refs.fileInput.$refs.input.click();\r\n    },\r\n    toggleShow() {\r\n      this.show = !this.show;\r\n    },\r\n    cropSuccess(imgDataUrl, field) {\r\n      console.log(\"-------- crop success --------\");\r\n      console.log(field);\r\n      this.imgDataUrl = imgDataUrl;\r\n    },\r\n  },\r\n  components: {\r\n    myUpload,\r\n  },\r\n  mounted() {\r\n    this.getCategories();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#modal-header {\r\n  border-bottom: 1px solid rgb(238, 232, 232);\r\n}\r\n\r\n#image-placeholder {\r\n  padding-top: 8em;\r\n  padding-bottom: 8em;\r\n  border: 2px dashed rgb(209, 209, 209);\r\n}\r\n</style>\r\n"]}]}