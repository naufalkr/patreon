{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\views\\Channel\\Home.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\src\\views\\Channel\\Home.vue","mtime":1730623892808},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1730447646010},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1730447648140},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1730447646049},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1730447647589},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\patreon-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1730447647010}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm5hdi1iZ2NvbG9yIHsNCiAgYmFja2dyb3VuZDogI2Y5ZjlmOTsNCn0NCg0KLmNhcmQgew0KICBiYWNrZ3JvdW5kOiAjZjlmOWY5ICFpbXBvcnRhbnQ7DQp9DQoNCi52LXRhYiB7DQogIG1hcmdpbi1yaWdodDogNGVtOw0KfQ0KDQojY2hhbm5lbC1ob21lIC52LWxpc3QtaXRlbS0tbGluazpiZWZvcmUgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsNCn0NCg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6QA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views/Channel","sourcesContent":["<template>\r\n  <div id=\"channel-home\">\r\n    <!-- Parallax background image for the channel header -->\r\n    <v-parallax\r\n      height=\"230\"\r\n      src=\"https://cdn.vuetifyjs.com/images/parallax/material.jpg\"\r\n    ></v-parallax>\r\n\r\n    <div class=\"nav-bgcolor\">\r\n      <div id=\"channel-header\">\r\n        <v-container class=\"py-0\">\r\n          <v-row class=\"justify-space-between\">\r\n            <v-col cols=\"12\" sm=\"5\" md=\"5\" lg=\"5\" offset-md=\"1\">\r\n              <v-skeleton-loader\r\n                type=\"list-item-avatar-two-line\"\r\n                :loading=\"loading\"\r\n                class=\"mr-1\"\r\n              >\r\n                <v-card class=\"transparent\" flat>\r\n                  <v-list-item three-line>\r\n                    <v-list-item-avatar size=\"80\">\r\n                      <v-img\r\n                        v-if=\"channel.photoUrl !== 'no-photo.jpg'\"\r\n                        :src=\"`${url}/uploads/avatars/${channel.photoUrl}`\"\r\n                      ></v-img>\r\n                      <v-avatar v-else color=\"red\" size=\"60\">\r\n                        <span class=\"white--text headline \">\r\n                          {{ channel.channelName.split('')[0].toUpperCase() }}\r\n                        </span>\r\n                      </v-avatar>\r\n                    </v-list-item-avatar>\r\n                    <v-list-item-content class=\"align-self-auto\">\r\n                      <v-list-item-title class=\"headline mb-1\">\r\n                        {{ channel.channelName }}\r\n                      </v-list-item-title>\r\n                      <v-list-item-subtitle>\r\n                        {{ channel.subscribers }} subscribers\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-card>\r\n              </v-skeleton-loader>\r\n            </v-col>\r\n\r\n            <v-col cols=\"12\" sm=\"5\" md=\"3\" lg=\"3\" v-if=\"!loading\">\r\n              <v-btn\r\n                v-if=\"currentUser && channel._id !== currentUser._id\"\r\n                :class=\"[ \r\n                  { 'red white--text': !subscribed }, \r\n                  { 'grey grey--text lighten-3 text--darken-3': subscribed },\r\n                  'mt-6'\r\n                ]\"\r\n                tile\r\n                large\r\n                depressed\r\n                :loading=\"subscribeLoading\"\r\n                @click=\"subscribe\"\r\n                >{{ !subscribed ? 'subscribe' : 'subscribed' }}</v-btn\r\n              >\r\n              <v-btn\r\n                v-else-if=\"showSubBtn\"\r\n                :class=\"[ \r\n                  { 'red white--text': !subscribed }, \r\n                  { 'grey grey--text lighten-3 text--darken-3': subscribed },\r\n                  'mt-6'\r\n                ]\"\r\n                tile\r\n                large\r\n                depressed\r\n                :loading=\"subscribeLoading\"\r\n                @click=\"subscribe\"\r\n                >{{ !subscribed ? 'subscribe' : 'subscribed' }}</v-btn\r\n              >\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </div>\r\n\r\n      <!-- Tabs for channel content -->\r\n      <v-card flat class=\"transparent\">\r\n        <v-tabs\r\n          v-model=\"tab\"\r\n          background-color=\"transparent\"\r\n          show-arrows\r\n          centered\r\n          center-active\r\n        >\r\n          <v-tab v-for=\"(item, i) in items\" :key=\"i\">\r\n            {{ item }}\r\n          </v-tab>\r\n        </v-tabs>\r\n\r\n        <v-container fluid>\r\n          <v-tabs-items v-model=\"tab\" class=\"transparent\">\r\n            <v-tab-item>\r\n              <v-card class=\"transparent\" flat>\r\n                <v-card-title>Uploads</v-card-title>\r\n                <v-row>\r\n                  <!-- Post cards displayed in a vertical list -->\r\n                  <v-col\r\n                    cols=\"12\"\r\n                    v-for=\"(post, i) in loading ? 10 : posts\"\r\n                    :key=\"i\"\r\n                    class=\"mx-auto\"\r\n                  >\r\n                    <v-skeleton-loader type=\"card\" :loading=\"loading\">\r\n                      <div class=\"post-card\">\r\n                        <img v-if=\"post.image\" :src=\"post.image\" alt=\"Post Image\" class=\"post-image\" />\r\n                        <h4>{{ post.title }}</h4>\r\n                        <p>{{ post.content }}</p>\r\n                        <p class=\"grey--text\">{{ post.userId }} - {{ dateFormatter(post.date) }}</p>\r\n                      </div>\r\n                    </v-skeleton-loader>\r\n                  </v-col>\r\n                  <v-col class=\"text-center\" v-if=\"posts.length === 0 && !loading\">\r\n                    <p>No posts yet</p>\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <infinite-loading @infinite=\"getPosts\">\r\n                      <div slot=\"spinner\">\r\n                        <v-progress-circular\r\n                          indeterminate\r\n                          color=\"red\"\r\n                        ></v-progress-circular>\r\n                      </div>\r\n                      <div slot=\"no-results\"></div>\r\n                      <span slot=\"no-more\"></span>\r\n                      <div slot=\"error\" slot-scope=\"{ trigger }\">\r\n                        <v-alert prominent type=\"error\">\r\n                          <v-row align=\"center\">\r\n                            <v-col class=\"grow\">\r\n                              <div class=\"title\">Error!</div>\r\n                              <div>\r\n                                Something went wrong, but don’t fret — let’s give it another shot.\r\n                              </div>\r\n                            </v-col>\r\n                            <v-col class=\"shrink\">\r\n                              <v-btn @click=\"trigger\">Take action</v-btn>\r\n                            </v-col>\r\n                          </v-row>\r\n                        </v-alert>\r\n                      </div>\r\n                    </infinite-loading>\r\n                  </v-col>\r\n                </v-row>\r\n              </v-card>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-container>\r\n      </v-card>\r\n    </div>\r\n\r\n    <!-- Sign-in modal component -->\r\n    <signin-modal\r\n      :openModal=\"signinDialog\"\r\n      :details=\"details\"\r\n      @closeModal=\"signinDialog = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nimport VideoCard from '@/components/VideoCard'\r\nimport SigninModal from '@/components/SigninModal'\r\n\r\nexport default {\r\n  data: () => ({\r\n    tab: null,\r\n    loading: false,\r\n    errored: false,\r\n    subscribed: false,\r\n    subscribeLoading: false,\r\n    showSubBtn: true,\r\n    url: process.env.VUE_APP_URL,\r\n    items: ['Videos','Membership', 'About'],\r\n    posts: [\r\n      {\r\n        title: \"Post Title 1\",\r\n        content: \"This is the content of post 1.\",\r\n        userId: \"User1\",\r\n        date: new Date(),\r\n        image: \"https://via.placeholder.com/350x150/3c3c3c/ffffff?text=Post+Image+1\"\r\n      },\r\n      {\r\n        title: \"Post Title 2\",\r\n        content: \"This is the content of post 2.\",\r\n        userId: \"User2\",\r\n        date: new Date(),\r\n        image: \"https://via.placeholder.com/350x150/3c3c3c/ffffff?text=Post+Image+2\"\r\n      },\r\n      {\r\n        title: \"Post Title 3\",\r\n        content: \"This is the content of post 3.\",\r\n        userId: \"User3\",\r\n        date: new Date(),\r\n        image: \"https://via.placeholder.com/350x150/3c3c3c/ffffff?text=Post+Image+3\"\r\n      },\r\n    ],\r\n    channel: {\r\n      _id: 'channel1',\r\n      channelName: 'Dummy Channel',\r\n      photoUrl: 'dummy-photo.jpg',\r\n      subscribers: 150,\r\n    },\r\n    signinDialog: false,\r\n    details: {}\r\n  }),\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated', 'currentUser'])\r\n  },\r\n  components: {\r\n    VideoCard,\r\n    SigninModal\r\n  },\r\n  methods: {\r\n    async subscribe() {\r\n      if (!this.isAuthenticated) {\r\n        this.signinDialog = true\r\n        this.details = {\r\n          title: 'Want to subscribe to this channel?',\r\n          text: 'Sign in to subscribe to this channel.'\r\n        }\r\n        return\r\n      }\r\n      this.subscribeLoading = true\r\n      // Simulate subscription action\r\n      this.subscribed = !this.subscribed\r\n      if (this.subscribed) {\r\n        this.channel.subscribers++\r\n      } else {\r\n        this.channel.subscribers--\r\n      }\r\n      this.subscribeLoading = false\r\n    },\r\n    dateFormatter(date) {\r\n      return date.toLocaleString() // Format the date as needed\r\n    },\r\n    getPosts() {\r\n      // Logic to fetch more posts\r\n    }\r\n  },\r\n  mounted() {\r\n    // No need to fetch data, use dummy data instead\r\n  },\r\n  beforeRouteUpdate(to, from, next) {\r\n    // No need to fetch data, use dummy data instead\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.post-card {\r\n  padding: 16px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  margin-bottom: 16px;\r\n  background: white;\r\n}\r\n.post-image {\r\n  max-width: 100%;\r\n  border-radius: 8px;\r\n}\r\n</style>\r\n\r\n\r\n<style>\r\n.nav-bgcolor {\r\n  background: #f9f9f9;\r\n}\r\n\r\n.card {\r\n  background: #f9f9f9 !important;\r\n}\r\n\r\n.v-tab {\r\n  margin-right: 4em;\r\n}\r\n\r\n#channel-home .v-list-item--link:before {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n"]}]}