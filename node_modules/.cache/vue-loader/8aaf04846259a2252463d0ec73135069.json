{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\src\\views\\Channel\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\src\\views\\Channel\\Home.vue","mtime":1730447401968},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\css-loader\\dist\\cjs.js","mtime":1730447646010},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1730447648140},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\postcss-loader\\src\\index.js","mtime":1730447646049},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1730447647589},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vue-loader\\lib\\index.js","mtime":1730447647010}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubmF2LWJnY29sb3Igew0KICBiYWNrZ3JvdW5kOiAjZjlmOWY5Ow0KfQ0KDQouY2FyZCB7DQogIGJhY2tncm91bmQ6ICNmOWY5ZjkgIWltcG9ydGFudDsNCn0NCg0KLnYtdGFiIHsNCiAgbWFyZ2luLXJpZ2h0OiA0ZW07DQp9DQoNCiNjaGFubmVsLWhvbWUgLnYtbGlzdC1pdGVtLS1saW5rOmJlZm9yZSB7DQogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Ow0KfQ0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiSA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views/Channel","sourcesContent":["<template>\r\n  <div id=\"channel-home\">\r\n    <v-parallax\r\n      height=\"230\"\r\n      src=\"https://cdn.vuetifyjs.com/images/parallax/material.jpg\"\r\n    ></v-parallax>\r\n    <div class=\"nav-bgcolor\">\r\n      <div id=\"channel-header\">\r\n        <v-container class=\"py-0\">\r\n          <v-row class=\"justify-space-between\">\r\n            <v-col cols=\"12\" sm=\"5\" md=\"5\" lg=\"5\" offset-md=\"1\">\r\n              <v-skeleton-loader\r\n                type=\"list-item-avatar-two-line\"\r\n                :loading=\"loading\"\r\n                class=\"mr-1\"\r\n              >\r\n                <v-card class=\"transparent\" flat>\r\n                  <v-list-item three-line>\r\n                    <v-list-item-avatar size=\"80\">\r\n                      <v-img\r\n                        v-if=\"channel.photoUrl !== 'no-photo.jpg'\"\r\n                        :src=\"`${url}/uploads/avatars/${channel.photoUrl}`\"\r\n                      ></v-img>\r\n\r\n                      <v-avatar v-else color=\"red\" size=\"60\">\r\n                        <span class=\"white--text headline \">\r\n                          {{\r\n                            channel.channelName.split('')[0].toUpperCase()\r\n                          }}</span\r\n                        >\r\n                      </v-avatar>\r\n                    </v-list-item-avatar>\r\n                    <v-list-item-content class=\"align-self-auto\">\r\n                      <v-list-item-title class=\"headline mb-1\">{{\r\n                        channel.channelName\r\n                      }}</v-list-item-title>\r\n                      <v-list-item-subtitle\r\n                        >{{ channel.subscribers }} subscribers\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-card>\r\n              </v-skeleton-loader>\r\n            </v-col>\r\n            <v-col cols=\"12\" sm=\"5\" md=\"3\" lg=\"3\" v-if=\"!loading\">\r\n              <v-btn\r\n                v-if=\"currentUser && channel._id !== currentUser._id\"\r\n                :class=\"[\r\n                  { 'red white--text': !subscribed },\r\n                  { 'grey grey--text lighten-3 text--darken-3': subscribed },\r\n                  'mt-6'\r\n                ]\"\r\n                tile\r\n                large\r\n                depressed\r\n                :loading=\"subscribeLoading\"\r\n                @click=\"subscribe\"\r\n                >{{ !subscribed ? 'subscribe' : 'subscribed' }}</v-btn\r\n              >\r\n              <!-- <template v-else-if=\"!currentUser\" -->\r\n              <v-btn\r\n                v-else-if=\"showSubBtn\"\r\n                :class=\"[\r\n                  { 'red white--text': !subscribed },\r\n                  { 'grey grey--text lighten-3 text--darken-3': subscribed },\r\n                  'mt-6'\r\n                ]\"\r\n                tile\r\n                large\r\n                depressed\r\n                :loading=\"subscribeLoading\"\r\n                @click=\"subscribe\"\r\n                >{{ !subscribed ? 'subscribe' : 'subscribed' }}</v-btn\r\n              >\r\n              <!-- <v-btn icon class=\"ml-5 mt-6\"><v-icon>mdi-bell</v-icon></v-btn> -->\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </div>\r\n      <v-card flat class=\"transparent\">\r\n        <v-tabs\r\n          v-model=\"tab\"\r\n          background-color=\"transparent\"\r\n          show-arrows\r\n          centered\r\n          center-active\r\n        >\r\n          <v-tab v-for=\"(item, i) in items\" :key=\"i\">\r\n            {{ item }}\r\n          </v-tab>\r\n        </v-tabs>\r\n\r\n        <v-container fluid>\r\n          <v-tabs-items v-model=\"tab\" class=\"transparent\">\r\n            <v-tab-item>\r\n              <v-card class=\"transparent\" flat>\r\n                <v-card-title>Uploads</v-card-title>\r\n                <!-- <v-sheet class=\"mx-auto\"> -->\r\n                <v-slide-group class=\"pa-4\" multiple show-arrows>\r\n                  <v-slide-item\r\n                    v-for=\"(video, i) in loading ? 5 : videos.data\"\r\n                    :key=\"i\"\r\n                  >\r\n                    <v-skeleton-loader\r\n                      type=\"card-avatar\"\r\n                      :loading=\"loading\"\r\n                      width=\"250px\"\r\n                      class=\"mr-1\"\r\n                    >\r\n                      <video-card\r\n                        :card=\"{ maxWidth: 250, type: 'noAvatar' }\"\r\n                        :video=\"video\"\r\n                        :channel=\"video.userId\"\r\n                      ></video-card>\r\n                    </v-skeleton-loader>\r\n                  </v-slide-item>\r\n                </v-slide-group>\r\n              </v-card>\r\n            </v-tab-item>\r\n            <v-tab-item>\r\n              <v-card class=\"transparent\" flat>\r\n                <v-card-title>Uploads</v-card-title>\r\n                <v-row>\r\n                  <v-col\r\n                    cols=\"12\"\r\n                    sm=\"6\"\r\n                    md=\"4\"\r\n                    lg=\"3\"\r\n                    v-for=\"(video, i) in loading ? 10 : videos.data\"\r\n                    :key=\"i\"\r\n                    class=\"mx-xs-auto\"\r\n                  >\r\n                    <v-skeleton-loader type=\"card-avatar\" :loading=\"loading\">\r\n                      <video-card\r\n                        :card=\"{ maxWidth: 350 }\"\r\n                        :video=\"video\"\r\n                        :channel=\"video.userId\"\r\n                      ></video-card>\r\n                    </v-skeleton-loader>\r\n                  </v-col>\r\n                </v-row>\r\n              </v-card>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-container>\r\n      </v-card>\r\n    </div>\r\n    <signin-modal\r\n      :openModal=\"signinDialog\"\r\n      :details=\"details\"\r\n      @closeModal=\"signinDialog = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nimport UserService from '@/services/UserService'\r\nimport VideoService from '@/services/VideoService'\r\nimport SubscriptionService from '@/services/SubscriptionService'\r\n\r\nimport VideoCard from '@/components/VideoCard'\r\nimport SigninModal from '@/components/SigninModal'\r\n\r\nexport default {\r\n  data: () => ({\r\n    tab: null,\r\n    loading: false,\r\n    errored: false,\r\n    subscribed: false,\r\n    subscribeLoading: false,\r\n    showSubBtn: true,\r\n    url: process.env.VUE_APP_URL,\r\n    items: ['Home', 'Videos', 'Playlists', 'Community', 'Channels', 'about'],\r\n    videos: {},\r\n    channel: {},\r\n    signinDialog: false,\r\n    details: {}\r\n  }),\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated', 'currentUser'])\r\n  },\r\n  components: {\r\n    VideoCard,\r\n    SigninModal\r\n  },\r\n  methods: {\r\n    async getChannel(id) {\r\n      // console.log(this.$route.params.id)\r\n      this.loading = true\r\n      this.errored = false\r\n\r\n      const channel = await UserService.getById(id)\r\n        .catch((err) => {\r\n          this.errored = true\r\n          console.log(err)\r\n          this.$router.push('/')\r\n        })\r\n        .finally(() => (this.loading = false))\r\n\r\n      if (!channel) return\r\n      this.channel = channel.data.data\r\n      // console.log(channel)\r\n      if (this.currentUser && this.currentUser._id === this.channel._id) {\r\n        this.showSubBtn = false\r\n      } else {\r\n        this.showSubBtn = true\r\n      }\r\n      this.getVideos()\r\n\r\n      this.checkSubscription(this.channel._id)\r\n      // console.log(channel)\r\n    },\r\n    async getVideos() {\r\n      // this.getChannel()\r\n      this.loading = true\r\n\r\n      const videos = await VideoService.getAll('public', {\r\n        userId: this.channel._id\r\n      })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          this.errored = true\r\n        })\r\n        .finally(() => (this.loading = false))\r\n\r\n      if (typeof videos === 'undefined') return\r\n\r\n      this.videos = videos.data\r\n    },\r\n    async checkSubscription(id) {\r\n      if (!this.currentUser) return\r\n      this.loading = true\r\n      const sub = await SubscriptionService.checkSubscription({ channelId: id })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n        .finally(() => {\r\n          this.loading = false\r\n        })\r\n      // console.log(sub.data.data)\r\n      if (!sub) return\r\n\r\n      if (!sub.data.data._id) this.subscribed = false\r\n      else this.subscribed = true\r\n    },\r\n    async subscribe() {\r\n      if (!this.isAuthenticated) {\r\n        this.signinDialog = true\r\n        this.details = {\r\n          title: 'Want to subscribe to this channel?',\r\n          text: 'Sign in to subscribe to this channel.'\r\n        }\r\n        return\r\n      }\r\n      this.subscribeLoading = true\r\n      const sub = await SubscriptionService.createSubscription({\r\n        channelId: this.channel._id\r\n      })\r\n        .catch((err) => console.log(err))\r\n        .finally(() => {\r\n          this.subscribeLoading = false\r\n        })\r\n\r\n      if (!sub) return\r\n\r\n      if (!sub.data.data._id) {\r\n        this.subscribed = false\r\n        this.channel.subscribers--\r\n      } else {\r\n        this.subscribed = true\r\n        this.channel.subscribers++\r\n      }\r\n\r\n      // console.log(this.subscribed)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getChannel(this.$route.params.id)\r\n  },\r\n  beforeRouteUpdate(to, from, next) {\r\n    this.getChannel(to.params.id)\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.nav-bgcolor {\r\n  background: #f9f9f9;\r\n}\r\n\r\n.card {\r\n  background: #f9f9f9 !important;\r\n}\r\n\r\n.v-tab {\r\n  margin-right: 4em;\r\n}\r\n\r\n#channel-home .v-list-item--link:before {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n"]}]}