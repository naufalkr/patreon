{"remainingRequest":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\src\\views\\Watch.vue?vue&type=template&id=42bb8b85&","dependencies":[{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\src\\views\\Watch.vue","mtime":1730447401970},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1730447648287},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1730447647589},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730447643917},{"path":"D:\\Kampus\\SEMESTER 5\\PBKK\\vue-nodejs-youtube-clone\\node_modules\\vue-loader\\lib\\index.js","mtime":1730447647010}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}